@using ChatHub.Infrastructure;

@{
    ViewBag.Title = "ChatHub";
}

<div class="modal fade" id="Modal" tabindex="-1" role="dialog" aria-labelledby="ModalLabel" aria-hidden="true" style="margin-top:15%">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalLabel">Create Message Room</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="outline: none;">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <input id="txtMessageRoom" type="text" class="form-control" placeholder="Enter room title...">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                <button id="btnCreateRoom" type="button" class="btn btn-success" data-dismiss="modal" disabled>Create</button>
            </div>
        </div>
    </div>
</div>

<div class="app-container">
    <div class="messaging">
        <div class="inbox-message">
            <div class="inbox-room">
                <div class="heading-search" style="position: relative; top: -25px;">
                    <div style="float: right;margin-top: 2px; position: relative;  bottom: -25px;">
                        <i class="fa fa-plus" style="margin-left: 25px;margin-top: 7px;color: #707070;cursor:pointer;display:inline;" data-toggle="modal" data-target="#Modal" aria-hidden="true"></i>
                    </div>
                    <div class="search-div" style="width: 95%;">

                        <div class="stylish-input-group" style="width:90%">
                            <input type="text" class="search-bar" placeholder="Search">
                            <span class="input-group-addon">
                                <button type="button" class="btn-noneoutline"> <i class="fa fa-search" aria-hidden="true"></i> </button>
                            </span>
                        </div>
                    </div>
                </div>
                <div id="messageRooms" class="inbox-chat">
                    @*Chat Rooms*@
                </div>
            </div>

            <div class="mesgs right-page">

                <div class="heading-search">
                    <div class="search-div">
                        <div class="stylish-input-group right-search">
                            <input type="text" class="search-bar" placeholder="Search">
                            <span class="input-group-addon">
                                <button type="button" class="btn-noneoutline"> <i class="fa fa-search" aria-hidden="true"></i> </button>
                            </span>
                        </div>
                    </div>
                </div>

                <div id="messages" class="message-history">
                    @*Messages*@
                </div>

                <div class="type-message" style="position: relative; bottom: -20px;">
                    <div style="position: relative; top: 10px;"><input id="txtMessage" type="text" class="write-message" placeholder="Type a message" /></div>
                    <div style="float: right; position: relative; top: -25px;"><button id="btnSendMessage" class="btn btn-success send-message" type="button" disabled>Send</button></div>

                </div>

            </div>
        </div>
    </div>

    <script>
    var yourId = '@User.GetId()';
    var connection = null;
    var currentMessageRoomId = null;

    window.onload = function () {
        connection = new signalR.HubConnectionBuilder().withUrl("/Hubs/Chat").build();

        connection.start().then(function () {
            getAllMessageRooms();

            connection.on("OnJoinMessageRoom", function (messageRoomId) {
                currentMessageRoomId = messageRoomId;
                setSignOutCss(messageRoomId);
                clearAllMessage();
                getAllMessages(messageRoomId);
                if ($("#txtMessage").val()) {
                    $("#btnSendMessage").prop("disabled", false);
                }
            });

            connection.on("OnLeaveMessageRoom", function () {
                currentMessageRoomId = null;
                clearAllMessage();
                setSignInCss(messageRoomId);
            });

            connection.on("OnCreateMessageRoom", function (messageRoom) {
                appendMessageRoom(messageRoom.id, messageRoom.name);
                goLastMessageRoom(500);
            });

            connection.on("OnReceiveMessage", function (senderName, message) {
                if (message.userId == yourId) {
                    appendOutgoingMessage(message.text, message.submitDateTime);
                }
                else {
                    appendIncomeMessage(senderName, message.text, message.submitDateTime);
                }
                goLastMessage(500);
            });

            $("#btnCreateRoom").click(function () {
                var text = $("#txtMessageRoom");
                connection.send("CreateMessageRoom", text.val());
                text.val("");
            });

            $("#btnSendMessage").click(function () {
                var text = $("#txtMessage");
                if (text.val() && currentMessageRoomId != null) {
                    connection.send("SendMessage", text.val(), currentMessageRoomId);
                    text.val("");
                    $("#btnSendMessage").prop("disabled", true);
                }
            });

            $(document).on("click", ".sign-in", function () {
                var messageRoomId = $(this).attr("id");

                if (messageRoomId == currentMessageRoomId) {
                    connection.send("LeaveMessageRoom", messageRoomId);
                }
                else {
                    connection.send("JoinMessageRoom", messageRoomId);
                }
            });

        }).catch(function (err) {
            return console.error(err.toString());
        });

        function getAllMessages(messageRoomId) {
            $.ajax({
                url: "/api/message/getAll/" + messageRoomId,
                method: "get",
                contentType: 'application/json',
                success: function (response) {
                    for (i = 0; i < response.length; i++) {
                        if (response[i].userId == yourId) {
                            appendOutgoingMessage(response[i].text, response[i].submitDateTime);
                        }
                        else {
                            appendIncomeMessage(response[i].name, response[i].text, response[i].submitDateTime);
                        }
                    }
                    goLastMessage();
                },
                error: function () {
                    alert('an error occured!');
                }
            });
        }

        function getAllMessageRooms() {
            $.ajax({
                url: "/api/messageroom/getall",
                method: "get",
                contentType: 'application/json',
                success: function (response) {
                    for (i = 0; i < response.length; i++) {
                        appendMessageRoom(response[i].id, response[i].name);
                    }
                    goLastMessageRoom();
                },
                error: function () {
                    alert('an error occured!');
                }
            });
        }

        function appendMessageRoom(id, name) {
            $("#messageRooms").append('<br /><button id="' + id + '" class="button sign-in">' + name + '</button><br />');
        }

        function appendIncomeMessage(name, text, date) {
            date = new Date(Date.parse(date));
            $("#messages").append('<div class="incoming-msg"><div class= "received-msg" style="margin-left: 5px;"><div class="received-withd-msg"><label style="color:#6d6185;">' + name + ':</label><p>' + text + '</p><span class="time-date">' + formatDate(date) + '</span></div><br /></div></div>');
        }

        function appendOutgoingMessage(text, date) {
            date = new Date(Date.parse(date));
            $("#messages").append('<div class="outgoing-msg" style="margin-right: 5px;"><div class="sent-msg"><p>' + text + '</p><span class="time-date">' + formatDate(date) + '</span><br /></div></div>');
        }

        function clearAllMessage() {
            $("#messages").empty();
        }

        function setSignInCss(messageRoomId) {
            $("#" + messageRoomId).css({ "content":"\f090", "transform":"scale(0.99)" });
        }

        function setSignOutCss(messageRoomId) {
            $("#" + messageRoomId).css({ "content": "\f08b", "transform": "scale(0.99)" });
        }

        $("#txtMessageRoom").on("input", function () {
            if ($("#txtMessageRoom").val().trim()) {
                $("#btnCreateRoom").prop("disabled", false);
            }
            else {
                $("#btnCreateRoom".prop("disabled", true));
            }
        });

        $("#txtMessageRoom").on("keyup", function () {
            if (event.keyCode === 13) {
                event.preventDefault();
                $("#btnCreateRoom").click();
            }
        });

        $("#txtMessage").on("input", function () {
            if ($("#txtMessage").val().trim() && currentMessageRoomId != null) {
                $("#btnSendMessage").prop("disabled", false);
            }
            else {
                $("#btnSendMessage").prop("disabled", true);
            }
        });

        $("#txtMessage").on("keyup", function () {
            if (event.keyCode === 13) {
                event.preventDefault();
                $("#btnSendMessage").click();
            }
        });

        function formatDate(date) {
            var days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
            var months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];

            return days[date.getDay()] + " " + date.getDate() + " " + months[date.getMonth()] + " " + date.getHours() + ":" + date.getMinutes();
        }

        function goLastMessage(duration = 0) {
            $("#messages").animate({ scrollTop: $('#messages').prop("scrollHeight") }, duration);
        }

        function goLastMessageRoom(duration = 0) {
            $("#messageRooms").animate({ scrollTop: $('#messageRooms').prop("scrollHeight") }, duration);
        }
    }
    </script>
